#%Module1.0
##
## nuke 8.0v3 modulefile
##
## @configure_input@
##
proc ModulesHelp { } {
        global version
		puts stderr " Your config is coming from $env(CONFIG)"
        puts stderr "\tThis module configures nuke 8.0v3."
        puts stderr "\n\tVersion $version\n"
}

module-whatis	"This is the config for nuke 8.0v3"

# setenv variable value
# append-path variable value
# prepend-path variable value
# remove-path variable value
# prereq modulefile
# is-loaded modulefile
# module subcommand
# module-info option - name,specified,shell,shelltype,alias,version,mode,
# module-alias
# module-version module-file version-name
# module-user level - advanced,expert,
# set-alias alias-name alias-string
# unset_alias alias-name
# system string
# uname field - sysname,nodename,domain,release,version,machine

switch [ module-info mode ] {
	"load" {
			puts stderr ">>>>>> Loading Nuke 8.0v3 <<<<<<<<"
			}
	"unload" {
			puts stderr ">>>>>> Unloading Nuke 8.0v3 <<<<<<<<"
}
	}
	
set CONFIG $env(CONFIG)

set NUKE_VERSION 8.0v3
setenv NUKE_VERSION $NUKE_VERSION

set NUKE_INSTALL_PATH /Applications/Nuke$NUKE_VERSION
setenv NUKE_INSTALL_PATH $NUKE_INSTALL_PATH

append-path NUKE_PATH $CONFIG/nukeConfig
set-alias nuke Nuke$NUKE_VERSION
set-alias nukex NukeX$NUKE_VERSION

append-path PATH $NUKE_INSTALL_PATH/Nuke$NUKE_VERSION.app/Contents/MacOS
append-path PATH $NUKE_INSTALL_PATH/NukeX$NUKE_VERSION.app/Contents/MacOS
	
# for Tcl script use only
set     version      "@VERSION@"

